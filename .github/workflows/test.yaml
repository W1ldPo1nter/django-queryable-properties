name: Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['2.7', '3.4', '3.5', '3.6', '3.7', '3.8', '3.9', '3.10', '3.11']
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
      if: matrix.python-version != '3.4'
    - name: Set up Python 3.4
      run: |
        apt -y install software-properties-common libssl-dev openssl wget
        wget "https://www.python.org/ftp/python/3.4.10/Python-3.4.10.tgz"
        tar -xvf "Python-3.4.10.tgz" -C /opt
        ln -s "/opt/Python-3.4.10/Include" /usr/include/python3.4
        cd "/opt/Python-3.4.10"
        ./configure && make
        make install
      if: matrix.python-version == '3.4'
    - name: Install importlib-metadata for older Python versions
      run: pip install "importlib-metadata<3"
      if: >-
        matrix.python-version == '2.7' ||
        matrix.python-version == '3.4' ||
        matrix.python-version == '3.5' ||
        matrix.python-version == '3.6' ||
        matrix.python-version == '3.7'
    - name: Install test utilities
      run: pip install "tox<4" tox-factor "coverage<5"
    - name: Lint with flake8
      run: tox -e flake8
      if: matrix.python-version == '3.11'
    - name: Test via tox
      run: |
        export TOXFACTOR=$(echo "py${{ matrix.python-version }}" | sed 's/\.//g')
        tox -- -p no:warnings
    - name: Generate coverage report
      run: coverage xml
      if: ${{ success() }}
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        env_vars: PYTHON
        files: coverage.xml
        flags: unittests
        verbose: true
      if: ${{ success() }}
